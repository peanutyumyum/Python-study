# 패키지
"""
패키지는 여러 소프트웨어의 모음을 말한다.
모듈이 모이면 패키지가 된다는 것은 이러한 맥락에서 맞는 말이다
패키지로 모아놓으면 모듈들을 계층적(디렉터리 구조)으로 관리할 수 있다

예를들면 다음과 같은 것이 패키지의 구조이다
game/
|--__init__.py
|
|--sound/
|--|--__init__.py
|--|--echo.py
|--|--way.py
|
|--graphic/
|--|--__init__.py
|--|--screen.py
|--|--render.py
|
|--play/
|--|--__init__.py
|--|--run.py
|--|--test.py
"""

# __init__.py
"""
__init___.py는 해당 디렉터리가 패키지의 일부임을 알려주는 역할을 한다
해당 디렉터리가 패키지의 일부임을 알려주기 위해서는 __init__.py를 꼭 생성해주어야한다
이는 하위 디렉터리도 마찬가지기 때문에 상위 디렉터리에 __init__.py가 있다고 하더라고 하위 디렉터리에 없다면 꼭 생성해주어야 패키지로 인식한다

__init__.py에는 __all__변수를 이용하여 __init__.py가 있는 디렉터리의 모듈 임포트를 관리할 수 있다
__init__.py에 __all__ = ['파일이름']하면 다른 파일에서 import* 하여 사용할 수 있다
"""
update = "2021-01-05"