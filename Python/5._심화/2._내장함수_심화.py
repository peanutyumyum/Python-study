"""
python에 내장되어 있는 함수들이다
검색기능을 이용하여 사용하라
"""


# input
"""
input은 사용자 입력을 받는 함수이다

변수 = input("프로프트에 띄울 메시지")하여 사용한다
"""
a = input("아무거나 입력하세요")
print(a)


### 자료형을 바꾸는 함수 ### ------------------------------------------------

# str
"""
문자열로 바꿔주는 함수이다

str(입력)하여 사용한다
"""
print(str(34))


# int
"""
문자열이나 소숫점이 있는 숫자를 정수로 바꿔주는 함수

int('입력')하여 사용한다
"""
print(int('3'))
print(int('1010', 2)) # 이진수 11


# list
"""
list는 반복가능한 자료형을 입력받아 리스트로 변환해주는 함수이다

list(반복가능한 자료형)하여 사용한다
"""
print(list("python"))
print(list((1, 2, 3)))


# tuple
"""
반복가능한 자료형을 튜플의 형태로 바꾸어 주는 함수이다

tuple(반복가능한 자료형)하여 사용한다
"""
print(tuple("abc"))
print(tuple([1, 2, 3]))
print(tuple({"a" : 1, "2" : "3"}))


# oct
"""
정수형태의 숫자를 8진수 문자열로 바꾸어주는 함수이다

oct(정수숫자)하여 사용한다
"""
print(oct(34))


# hex
"""
정수 값을 입력받아 16진수로 변환하여 돌려주는 함수이다

hex(정수값)하여 사용한다
"""
print(hex(16))


### 수리와 관련된 함수 ### ------------------------------------------------

# abs
"""
abs는 입력받은 숫자의 절댓값을 반환하는 함수이다

abs(숫자)하여 사용한다
"""
print(abs(-3))


# sum
"""
sum은 입력받은 리스트나 튜플의 모든 요소의 합을 반환하는 함수이다

sum(입력)하여 사용한다
"""
print(sum([1, 2, 3]))


# divmod
"""
div는 두 개의 숫자를 입력하면, 그 몫과 나머지를 튜플로 반환하는 함수이다

div(a, b)로 사용하며, a를 b로 나눈 몫과 나머지를 반환한다
"""
print(divmod(3, 2))


# max
"""
max는 반복가능한 자료형을 입력받아 그 최댓값을 돌려주는 함수이다

max(반복가능한 자료형)하여 사용한다
"""
print(max([1, 3, 4]))
print(max("pyhton"))


#min
"""
min는 반복가능한 자료형을 입력받아 그 최솟값을 돌려주는 함수이다

min(반복가능한 자료형)하여 사용한다
"""
print(min([1, 3, 4]))
print(min("pyhton"))


# pow
"""
pow는 제곱을 해주는 함수이다

pow(x, y)하여 사용하고, x를 y제곱한 결과를 반환한다
"""
print(pow(2, 7))


# round
"""
round는 숫자를 입력받아 반올림 해주는 함수이다

round(숫자, 반올림하고 싶은 소숫점의 자릿수)하여 사용한다
"""
print(round(3.8))
print(round(3.832, 2))


### 자료를 가공하는 함수 ###

# all
"""
all은 반복가능한 자료형(for문으로 활용할 수 있는 것들, 예를 들면 리스트, 튜플, 문자열, 딕셔너리, 집합 등)안에
하나라도 거짓이면 False를 반환하고, 모두 참이면 True를 반환하는 함수이다

all(반복가능한 자료형)하여 사용한다
"""
print(all([1, 2, 3, 0])) # 0은 False이다


# any
"""
any는 반복가능한 자료형(for문으로 활용할 수 있는 것들, 예를 들면 리스트, 튜플, 문자열, 딕셔너리, 집합 등)안에
하나라도 참이면 True를 반환하고, 모두 거짓이면 False를 반환하는 함수이다

any(반복가능한 자료형)하여 사용한다
"""
print(any([1, 2, 3, 0]))


# enumerate
"""
enumerate는 순서가 있는 자료형(리스트, 튜플, 문자열)을 입력받아 인덱스 값(1번째, 2번째...)을 포함하는 enumerate객체를 반환한다
0 자료형요소
1 자료형요소
2 자료형요소
...

for i, name enumerate(순서가 있는 자료형)하여 사용한다
"""
for i, name in enumerate(['body', 'foo', 'bar']):
    print(i, name)


# eval
"""
eval은 실행가능한 문자열("'1'+'2'")을 입력받아 결과를 반환하는 함수이다

eval(실항가능한 문자열)하여 사용하면 된다
"""
eval("'hi'+'hello'")


# filter
"""
filter는 반복가능한 자료형이 임의의 함수의 인수가 되었을 때, 그 반환값이 참인 것만 골라 반환한다.

filter(임의의 함수, 반복가능한 자료형)하여 사용한다
"""
def positive(x):
    return x > 0
print(list(filter(positive, [1, 2, -1, -2, -3])))


# isinstance
"""
isinstance는 둘이 서로 인스턴스 클래스 관계에 있는지 판단하여 맞으면 True 아니면 Fales를 반환한다

isinstance(인스턴스이름, 클래스이름)하여 사용한다
"""
a = str() # 자료형 클래스 str을 이용하였다
print(isinstance(a, str))


# sorted
"""
sorted함수는 입력값을 정렬(오름차순-작은 것부터 시작)하여 리스트로 반환한다

sorted(입력값)하여 사용한다
"""
print(sorted([3, 1, 2]))
print(sorted("python"))


### 자료의 정보를 알려주는 함수 ### ------------------------------------------------

# id
"""
객체를 입력받아 객체의 고유주소 값(레퍼런스)을 돌려주는 함수이다

id(객체)하여 사용한다
"""
a = 1578
b = 1578
print(id(a))
print(id(b))
print(id(3))


# type
"""
type 함수는 입력한 자료형이 무엇인지 알려주는 함수이다

type(자료)하여 사용한다
"""
print(type("hi"))


# len
"""
len은 입력값의 길이(요소의 개수)를 반환하는 함수이다

len(입력값)하여 사용한다
"""
print(len("hello"))
print(len([1, 2, 3]))


# chr
"""
chr은 아스키(ASCI)코드를 값을 입력받아 그 코드에 해당하는 문자를 출력하는 함수이다
아스키 코드는 0에서 127 사이의 숫자를 각 하나의 문자 도는 기호에 대응시켜 놓은 것이다

chr(숫자)하여 사용한다
"""
print(chr(3))


# ord
"""
ord는 문자의 아스키 코드를 반환하는 함수이다

ord("문자")하여 사용한다
"""
print(ord("아")) 


# dir
"""
dir은 객체가 자체적으로 가지고 있는 변수나 함수를 보여준다
파이썬에서는 모든 자료형이 클래스로 정리되어 있으므로, 자료형이 가진 함수(매서드)나 변수(인스턴스변수)를 알려준다고 할 수 있다

dir(객체)하여 사용한다
"""
print(dir([1, 2, 3]))