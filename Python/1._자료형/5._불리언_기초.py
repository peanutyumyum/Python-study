# 불리언(Boolean)은 오직 True 혹은 False의 값만 가지는 자료형이다.

a = True
print(a) # a의 값은 True라고 할 것이다.

a = False
print(a) # a의 값은 False라고 할 것이다.

# 또 모든 자료형은 참, 거짓을 가지고 있다.
# 문자열
a = "python" # 이때 a는 참이다.
a = "" # 이때 a는 거짓이다.

# 리스트
a = [1, 2, 3] # 이때 a는 참이다.
a = [] # 이때 a는 거짓이다.

# 튜플
a = (1, 2, 3) # 이때 a는 참이다.
a = () # 이때 a는 거짓이다.

# 딕셔너리
a = {"a" : 1 } # 이때 a는 참이다.
a = {} # 이때 a는 거짓이다.

# 정수 및 실수
a = 1, 2, 3 # 이때 a는 참이다.
a = 0 # 이때 a는 거짓이다.

# None
a = None # 이때 a는 거짓이다.


# 이러한 성질을 사용하여 자료형이 참 거짓인지 알려주는 함수가 있다. 바로 bool(자료형이 참 거짓인지 알려주는 함수)
a = bool("python")
print(a)


"=============================================================================================================================="

# 비교 연산자는 두 개 이상의 자료를 비교하는 것으로 이를 변수에 자료로 저장하면 비교가 참(True)인지 거짓(Fales)인지에 따라 Boolean값이 저장된다.

a = 500
b = 300
c = 500

boolean = a == c # a와 c의 값이 같으므로 참이라는 값을 boolean에 지정할 것이다.
print(boolean) # 결과 값은 True

boolean = a < b # a와 b중에 a가 더 크므로 거짓이라는 값을 boolean에 저장할 것이다.
print(boolean) # 결과 값은 False


# 비교연산자
# == 같다 / != 다르다 / < 오른쪽이 더 크다 / > 왼쪽이 더 크다 / <= 오른쪽이 더 크거나 같다 / >= 왼쪽이 더 크거나 같다
# 비교연산자는 숫자도 가능하지만, 문자열도 가능하다. 문자열일 경우 오름차순에 따라 서열이 정해진다.

"=============================================================================================================================="

# 논리연산자는 두개 이상의 자료의 관계를 비교하는 것으로 이를 변수에 자료로 저장하면 비교가 참(True)인지 거짓(Fales)인지에 따라 Boolean값이 저장된다.

a = True
print(not a) # True값을 반대로 전환하라고 했으므로, False값을 반환한다.


# 논리연산자
# not 값을 반대로 바꿈 / and 둘 다 참 / or 둘 중 하나라도 참

