# 변수를 선언하는 것은 자료(객체)를 가르키는 것을 정하는 것이다.
a = [1, 2, 3]

# 이렇게 하면 [1, 2, 3]를 a라는 것으로 지정하기로 한 것이다. 이를 활용하면,
b = a
# 라는 것도 가능할 것이다.

# 그런데, 이것은 b와 a가 항상 같게 한 것이므로, a가 바뀔 때 b도 변하게 될 수 있다. 그래서 a의 값만을 저장하기 위해서는..

b = a[:] # a에 저장된 모든 리스트를 슬라이싱 하여 저장
# 이렇게 해볼 수 있을 것이다. 혹은

from copy import copy
b = copy(a) # 하여 저장 할 수도 있다.

# 여러 방식의 변수 선언
"""
다음과 같은 것도 가능하다
"""
a, b = [1, 2]
a, b = (1, 2)

# 지역변수와 번역변수
"""
기본적으로 함수안에서 쓰이는 변수는 그 안에서만 사용되고, 밖에서는 사용될 수 없다
또 밖에서 사용되던 변수도 안에서는 사용될 수 없다
그러나 밖에서 쓰이던 변수이름을 똑같이 안에서 새로 정의하면, 안에서만 쓰이는 새로운 변수를 만든 것이다
"""
a = "me"
def variable():
    a = "function"
    return a
variable()
print (a) # 이런 경우 a는 위에 me를 지칭하는 것이다.
"""
이러한 경우 global 함수를 이용하면 지역변수(함수 안에서만 쓰이는 변수)를 전역변수(파일 전체에서 쓰이는 변수)로 사용할 수 있다.
"""
a = 1
def use_global():
    global a
    a += 1
    return a
use_global()
print(a) # 이런 경우 a에는 1이 더해진 2가 된다